name: ci-golang-workflow
on:
  pull_request:                         # Vai chamar a ação sempre que fizer um pull_request na branch develop, podemos mudar para commit, delete, etc..
    branches:
      - develop                         # Branch que rodará a aplicação
jobs:
  check-application:
    runs-on: ubuntu-latest              # Máquina para rodar a aplicação
    steps:
      - uses: actions/checkout@v2       # Pega os dados do push e baixa na máquina escolhida
      - uses: actions/setup-go@v2       # Esse actions/setup-go é o nome do repositório do Git
        with:
          go-version: 1.15              # Versão do Go
#          go-version: ${{ matrix.go }} # Versão do Go caso tenha strategy Matrix
      - run: go test                    # Comandos que serão executados
      - run: go run math.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Cadastre suas secrets dentro do seu GitHub (Leia o README)
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: guilhermemmnn/fc2-ci:latest # Utilize o mesmo nome de usuário do DockerHub

    # Strategy Matrix -> Podemos testar a aplicação em mais de uma versão do Go (por exemplo)
#    strategy:
#      matrix:
#        go: [ '1.14','1.15' ]